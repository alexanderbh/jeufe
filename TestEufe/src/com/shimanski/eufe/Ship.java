/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.shimanski.eufe;

public class Ship extends Item {
  private long swigCPtr;

  protected Ship(long cPtr, boolean cMemoryOwn) {
    super(eufeJNI.Ship_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Ship obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        eufeJNI.delete_Ship(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Module addModule(int typeID) {
    long cPtr = eufeJNI.Ship_addModule(swigCPtr, this, typeID);
    return (cPtr == 0) ? null : new Module(cPtr, false);
  }

  public void removeModule(Module module) {
    eufeJNI.Ship_removeModule(swigCPtr, this, Module.getCPtr(module), module);
  }

  public Drone addDrone(int typeID) {
    long cPtr = eufeJNI.Ship_addDrone(swigCPtr, this, typeID);
    return (cPtr == 0) ? null : new Drone(cPtr, false);
  }

  public void removeDrone(Drone drone) {
    eufeJNI.Ship_removeDrone(swigCPtr, this, Drone.getCPtr(drone), drone);
  }

  public ModulesList getModules() {
    return new ModulesList(eufeJNI.Ship_getModules(swigCPtr, this), true);
  }

  public DronesList getDrones() {
    return new DronesList(eufeJNI.Ship_getDrones(swigCPtr, this), true);
  }

  public ModulesList getProjectedModules() {
    return new ModulesList(eufeJNI.Ship_getProjectedModules(swigCPtr, this), true);
  }

  public DronesList getProjectedDrones() {
    return new DronesList(eufeJNI.Ship_getProjectedDrones(swigCPtr, this), true);
  }

  public boolean canFit(Module module) {
    return eufeJNI.Ship_canFit(swigCPtr, this, Module.getCPtr(module), module);
  }

  public boolean isDisallowedAssistance() {
    return eufeJNI.Ship_isDisallowedAssistance(swigCPtr, this);
  }

  public boolean isDisallowedOffensiveModifiers() {
    return eufeJNI.Ship_isDisallowedOffensiveModifiers(swigCPtr, this);
  }

  public void addProjectedModule(Module module) {
    eufeJNI.Ship_addProjectedModule(swigCPtr, this, Module.getCPtr(module), module);
  }

  public void removeProjectedModule(Module module) {
    eufeJNI.Ship_removeProjectedModule(swigCPtr, this, Module.getCPtr(module), module);
  }

  public void addProjectedDrone(Drone drone) {
    eufeJNI.Ship_addProjectedDrone(swigCPtr, this, Drone.getCPtr(drone), drone);
  }

  public void removeProjectedDrone(Drone drone) {
    eufeJNI.Ship_removeProjectedDrone(swigCPtr, this, Drone.getCPtr(drone), drone);
  }

  public DamagePattern getDamagePattern() {
    return new DamagePattern(eufeJNI.Ship_getDamagePattern(swigCPtr, this), false);
  }

  public void setDamagePattern(DamagePattern damagePattern) {
    eufeJNI.Ship_setDamagePattern(swigCPtr, this, DamagePattern.getCPtr(damagePattern), damagePattern);
  }

  public int getNumberOfSlots(Module.Slot slot) {
    return eufeJNI.Ship_getNumberOfSlots(swigCPtr, this, slot.swigValue());
  }

  public int getFreeSlots(Module.Slot slot) {
    return eufeJNI.Ship_getFreeSlots(swigCPtr, this, slot.swigValue());
  }

  public int getUsedSlots(Module.Slot slot) {
    return eufeJNI.Ship_getUsedSlots(swigCPtr, this, slot.swigValue());
  }

  public int getNumberOfHardpoints(Module.Hardpoint hardpoint) {
    return eufeJNI.Ship_getNumberOfHardpoints(swigCPtr, this, hardpoint.swigValue());
  }

  public int getFreeHardpoints(Module.Hardpoint hardpoint) {
    return eufeJNI.Ship_getFreeHardpoints(swigCPtr, this, hardpoint.swigValue());
  }

  public int getUsedHardpoints(Module.Hardpoint hardpoint) {
    return eufeJNI.Ship_getUsedHardpoints(swigCPtr, this, hardpoint.swigValue());
  }

  public float getCalibrationUsed() {
    return eufeJNI.Ship_getCalibrationUsed(swigCPtr, this);
  }

  public float getTotalCalibration() {
    return eufeJNI.Ship_getTotalCalibration(swigCPtr, this);
  }

  public float getPowerGridUsed() {
    return eufeJNI.Ship_getPowerGridUsed(swigCPtr, this);
  }

  public float getTotalPowerGrid() {
    return eufeJNI.Ship_getTotalPowerGrid(swigCPtr, this);
  }

  public float getCpuUsed() {
    return eufeJNI.Ship_getCpuUsed(swigCPtr, this);
  }

  public float getTotalCpu() {
    return eufeJNI.Ship_getTotalCpu(swigCPtr, this);
  }

  public float getDroneBandwidthUsed() {
    return eufeJNI.Ship_getDroneBandwidthUsed(swigCPtr, this);
  }

  public float getTotalDroneBandwidth() {
    return eufeJNI.Ship_getTotalDroneBandwidth(swigCPtr, this);
  }

  public float getDroneBayUsed() {
    return eufeJNI.Ship_getDroneBayUsed(swigCPtr, this);
  }

  public float getTotalDroneBay() {
    return eufeJNI.Ship_getTotalDroneBay(swigCPtr, this);
  }

  public float getCapCapacity() {
    return eufeJNI.Ship_getCapCapacity(swigCPtr, this);
  }

  public boolean isCapStable() {
    return eufeJNI.Ship_isCapStable(swigCPtr, this);
  }

  public float getCapLastsTime() {
    return eufeJNI.Ship_getCapLastsTime(swigCPtr, this);
  }

  public float getCapStableLevel() {
    return eufeJNI.Ship_getCapStableLevel(swigCPtr, this);
  }

  public float getCapUsed() {
    return eufeJNI.Ship_getCapUsed(swigCPtr, this);
  }

  public float getCapRecharge() {
    return eufeJNI.Ship_getCapRecharge(swigCPtr, this);
  }

  public Resistances getResistances() {
    return new Resistances(eufeJNI.Ship_getResistances(swigCPtr, this), false);
  }

  public Tank getTank() {
    return new Tank(eufeJNI.Ship_getTank(swigCPtr, this), false);
  }

  public Tank getEffectiveTank() {
    return new Tank(eufeJNI.Ship_getEffectiveTank(swigCPtr, this), false);
  }

  public Tank getSustainableTank() {
    return new Tank(eufeJNI.Ship_getSustainableTank(swigCPtr, this), false);
  }

  public Tank getEffectiveSustainableTank() {
    return new Tank(eufeJNI.Ship_getEffectiveSustainableTank(swigCPtr, this), false);
  }

  public HitPoints getHitPoints() {
    return new HitPoints(eufeJNI.Ship_getHitPoints(swigCPtr, this), false);
  }

  public HitPoints getEffectiveHitPoints() {
    return new HitPoints(eufeJNI.Ship_getEffectiveHitPoints(swigCPtr, this), false);
  }

  public float getShieldRecharge() {
    return eufeJNI.Ship_getShieldRecharge(swigCPtr, this);
  }

  public float getWeaponDps() {
    return eufeJNI.Ship_getWeaponDps(swigCPtr, this);
  }

  public float getWeaponVolley() {
    return eufeJNI.Ship_getWeaponVolley(swigCPtr, this);
  }

  public float getDroneDps() {
    return eufeJNI.Ship_getDroneDps(swigCPtr, this);
  }

  public float getDroneVolley() {
    return eufeJNI.Ship_getDroneVolley(swigCPtr, this);
  }

  public float getAlignTime() {
    return eufeJNI.Ship_getAlignTime(swigCPtr, this);
  }

  public float getWarpSpeed() {
    return eufeJNI.Ship_getWarpSpeed(swigCPtr, this);
  }

  public float getMaxWarpDistance() {
    return eufeJNI.Ship_getMaxWarpDistance(swigCPtr, this);
  }

  public float getVelocity() {
    return eufeJNI.Ship_getVelocity(swigCPtr, this);
  }

  public float getSignatureRadius() {
    return eufeJNI.Ship_getSignatureRadius(swigCPtr, this);
  }

  public int getMaxTargets() {
    return eufeJNI.Ship_getMaxTargets(swigCPtr, this);
  }

  public float getMaxTargetRange() {
    return eufeJNI.Ship_getMaxTargetRange(swigCPtr, this);
  }

  public float getScanStrength() {
    return eufeJNI.Ship_getScanStrength(swigCPtr, this);
  }

  public Ship.ScanType getScanType() {
    return Ship.ScanType.swigToEnum(eufeJNI.Ship_getScanType(swigCPtr, this));
  }

  public float getProbeSize() {
    return eufeJNI.Ship_getProbeSize(swigCPtr, this);
  }

  public float getScanResolution() {
    return eufeJNI.Ship_getScanResolution(swigCPtr, this);
  }

  public int getMaxActiveDrones() {
    return eufeJNI.Ship_getMaxActiveDrones(swigCPtr, this);
  }

  public int getActiveDrones() {
    return eufeJNI.Ship_getActiveDrones(swigCPtr, this);
  }

  public final static class ScanType {
    public final static Ship.ScanType SCAN_TYPE_RADAR = new Ship.ScanType("SCAN_TYPE_RADAR");
    public final static Ship.ScanType SCAN_TYPE_LADAR = new Ship.ScanType("SCAN_TYPE_LADAR");
    public final static Ship.ScanType SCAN_TYPE_MAGNETOMETRIC = new Ship.ScanType("SCAN_TYPE_MAGNETOMETRIC");
    public final static Ship.ScanType SCAN_TYPE_GRAVIMETRIC = new Ship.ScanType("SCAN_TYPE_GRAVIMETRIC");
    public final static Ship.ScanType SCAN_TYPE_MULTISPECTRAL = new Ship.ScanType("SCAN_TYPE_MULTISPECTRAL");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ScanType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ScanType.class + " with value " + swigValue);
    }

    private ScanType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ScanType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ScanType(String swigName, ScanType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ScanType[] swigValues = { SCAN_TYPE_RADAR, SCAN_TYPE_LADAR, SCAN_TYPE_MAGNETOMETRIC, SCAN_TYPE_GRAVIMETRIC, SCAN_TYPE_MULTISPECTRAL };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
